{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-enemy-modal/add-enemy-modal.component.ts","./src/app/components/add-enemy-modal/add-enemy-modal.component.html","./src/app/components/battlefield/battlefield.component.ts","./src/app/components/battlefield/battlefield.component.html","./src/app/components/cell/cell.component.ts","./src/app/components/cell/cell.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/landing/landing.component.ts","./src/app/components/landing/landing.component.html","./src/app/components/modify-battlefield-modal/modify-battlefield-modal.component.ts","./src/app/components/modify-battlefield-modal/modify-battlefield-modal.component.html","./src/app/components/play/play.component.ts","./src/app/components/play/play.component.html","./src/app/components/user/user.component.ts","./src/app/components/user/user.component.html","./src/app/components/userlist/userlist.component.ts","./src/app/components/userlist/userlist.component.html","./src/app/services/state.service.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { StateService } from './services/state.service';\nimport { MOCK_CHARACTERS } from './mock-data/mock-characters';\nimport { Socket } from 'ngx-socket-io';\nimport { CellState, Room } from './interfaces/cell-state';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'battlefield';\n\n  constructor(\n    private stateService: StateService,\n    private socket: Socket\n    ) {}\n\n  ngOnInit() {\n    this.socket.on('newUser', (userList: CellState[]) => {\n      this.stateService.characters$.next(userList);\n    });\n    this.socket.on('room', (room: Room) => {\n      this.stateService.room$.next(room);\n    });\n    this.socket.on('updateBattlefield', (battlefield: Array<CellState[]>) => {\n      this.stateService.battlefieldState$.next(battlefield);\n    });\n    this.socket.on('updateCurrentTurn', (turn: number) => {\n      this.stateService.currentTurnIndex$.next(turn);\n    });\n  }\n}\n","<div id=\"main\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { CellComponent } from './components/cell/cell.component';\nimport { BattlefieldComponent } from './components/battlefield/battlefield.component';\nimport { UserlistComponent } from './components/userlist/userlist.component';\nimport { UserComponent } from './components/user/user.component';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCardModule } from '@angular/material/card';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { PlayComponent } from './components/play/play.component';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { AddEnemyModalComponent } from './components/add-enemy-modal/add-enemy-modal.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { ModifyBattlefieldModalComponent } from './components/modify-battlefield-modal/modify-battlefield-modal.component';\n\nconst prod = false;\nconst config: SocketIoConfig = { url: prod ? window.location.hostname : 'http://localhost:4200', options: {} };\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CellComponent,\n    BattlefieldComponent,\n    UserlistComponent,\n    UserComponent,\n    LandingComponent,\n    FooterComponent,\n    PlayComponent,\n    AddEnemyModalComponent,\n    ModifyBattlefieldModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatTooltipModule,\n    MatCardModule,\n    MatButtonModule,\n    MatInputModule,\n    MatDialogModule,\n    MatIconModule,\n    MatMenuModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot([\n      {\n        path: '',\n        component: LandingComponent\n      },\n      {\n        path: 'play',\n        component: PlayComponent\n      }\n    ]),\n    SocketIoModule.forRoot(config)\n  ],\n  providers: [],\n  entryComponents: [AddEnemyModalComponent, ModifyBattlefieldModalComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { CellState } from 'src/app/interfaces/cell-state';\nimport { StateService } from 'src/app/services/state.service';\n\n@Component({\n  selector: 'app-add-enemy-modal',\n  templateUrl: './add-enemy-modal.component.html',\n  styleUrls: ['./add-enemy-modal.component.scss']\n})\nexport class AddEnemyModalComponent implements OnInit {\n\n  form = this.fb.group({\n    name: ['', Validators.required],\n    color: ['#000000', Validators.required],\n    movementSpeed: ['', Validators.required],\n    initiativeScore: ['', Validators.required]\n  });\n\n  constructor(\n    private dialog: MatDialogRef<AddEnemyModalComponent>,\n    private stateService: StateService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  closeModal() {\n    const formVal = this.form.value;\n    const charToAdd: CellState = {\n      character: {\n        name: formVal.name,\n        baseMovement: formVal.movementSpeed,\n        initiativeScore: formVal.initiativeScore,\n        currentPosition: [-1, -1],\n        player: this.stateService.myName$.getValue()\n      },\n      color: formVal.color,\n      id: this.stateService.myId$.getValue()\n    };\n    this.dialog.close(charToAdd);\n  }\n\n}\n","<h1 mat-dialog-title>Add Enemy</h1>\n<div mat-dialog-content>\n    <form [formGroup]=\"form\">\n        <div class=\"margin-bottom\">\n            <mat-form-field>\n                <mat-label>Enemy Name</mat-label>\n                <input matInput required formControlName=\"name\">\n            </mat-form-field>\n        </div>\n        <div class=\"margin-bottom\">\n            <mat-form-field>\n                <mat-label>Enemy Color</mat-label>\n                <input matInput type=\"color\" required formControlName=\"color\">\n            </mat-form-field>\n        </div>\n        <div class=\"margin-bottom\">\n            <mat-form-field>\n                <mat-label>Character Base Movement Speed (just the number)</mat-label>\n                <input matInput required formControlName=\"movementSpeed\">\n            </mat-form-field>\n        </div>\n        <div class=\"margin-bottom\">\n            <mat-form-field>\n                <mat-label>Character Initiative (number)</mat-label>\n                <input matInput required formControlName=\"initiativeScore\">\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n<div mat-dialog-actions class=\"text-right\">\n    <button mat-raised-button color=\"primary\" (click)=\"closeModal()\">Add</button>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { CellState } from 'src/app/interfaces/cell-state';\nimport { Character } from 'src/app/interfaces/character';\nimport { StateService } from 'src/app/services/state.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Socket } from 'ngx-socket-io';\n\n@Component({\n  selector: 'app-battlefield',\n  templateUrl: './battlefield.component.html',\n  styleUrls: ['./battlefield.component.scss']\n})\nexport class BattlefieldComponent implements OnInit, OnDestroy {\n\n  battlefieldState: Array<CellState[]> = [];\n  private activeCharacter: CellState;\n  private destroy$ = new Subject();\n\n  constructor(\n    private stateService: StateService,\n    private socket: Socket\n  ) { }\n\n  ngOnInit(): void {\n    this.stateService.battlefieldState$.pipe(takeUntil(this.destroy$)).subscribe((state) => {\n      this.battlefieldState = state;\n    });\n    this.stateService.activeCharacter$.pipe(takeUntil(this.destroy$)).subscribe((char) => {\n      this.activeCharacter = char;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n\n  cellClicked(row: number, column: number) {\n    // It's my turn (or I'm GM)\n    if (this.stateService.isMyTurn$.getValue() || this.stateService.isGM$.getValue()) {\n      // We clicked a character - my character - or I'm GM\n      if (this.battlefieldState[row][column] && this.battlefieldState[row][column].character &&\n        (this.battlefieldState[row][column].id === this.stateService.myId$.getValue() || this.stateService.isGM$.getValue()) &&\n        !this.activeCharacter) {\n        this.stateService.activeCharacter$.next(this.battlefieldState[row][column]);\n        const cellsCanBeMovedInto = this.calculateCellsCanBeMovedInto(this.activeCharacter.character.baseMovement, [row, column]);\n        cellsCanBeMovedInto.forEach((cell: number[]) => {\n          if (!this.battlefieldState[cell[0]][cell[1]] || !this.battlefieldState[cell[0]][cell[1]].character) {\n            this.battlefieldState[cell[0]][cell[1]] = { color: 'green', isReadyToBeMovedInto: true };\n          }\n        });\n        // We clicked a space we can move into\n      } else if ((this.battlefieldState[row][column] && this.battlefieldState[row][column].isReadyToBeMovedInto) ||\n        this.stateService.isGM$.getValue()\n      ) {\n        const activeChar = this.activeCharacter;\n        if (activeChar.character.currentPosition[0] !== -1 && activeChar.character.currentPosition[1] !== -1) {\n          this.battlefieldState[activeChar.character.currentPosition[0]][activeChar.character.currentPosition[1]] = null;\n        }\n        activeChar.character.currentPosition = [row, column];\n        const charList = this.stateService.characters$.getValue();\n        const idx = charList.findIndex((char) => {\n          return char.character.name === activeChar.character.name && char.character.player === activeChar.character.player;\n        });\n        charList[idx].character.currentPosition = [row, column];\n        this.battlefieldState[row][column] = activeChar;\n        // Clean out moving cells, we're done here\n        this.battlefieldState.forEach((row, rowIdx) => {\n          row.forEach((column, columnIdx) => {\n            if (column && column.isReadyToBeMovedInto) {\n              this.battlefieldState[rowIdx][columnIdx] = null;\n            }\n          });\n        });\n        this.socket.emit('battlefieldChange', this.battlefieldState);\n        this.socket.emit('updateUserList', charList);\n        this.stateService.activeCharacter$.next(null);\n      }\n    }\n  }\n\n  // currentPosition: [y, x] from top left\n  private calculateCellsCanBeMovedInto(baseMovement: number, currentPosition: number[]) {\n    const cellsTraversable = baseMovement / 5;\n    const possibleChoices: Array<number[]> = [];\n    // Just need two opposing corners in this - max/min x and y\n    const boxBounds = {\n      maxX: -1,\n      maxY: -1,\n      minX: -1,\n      minY: -1\n    }\n    // Get diagonal maximums- these form the bounds of the traversible box\n    for (let i = cellsTraversable; i > -1; i--) {\n      if (this.battlefieldState[1].length > currentPosition[1] + i && boxBounds.maxX === -1) {\n        boxBounds.maxX = currentPosition[1] + i;\n      }\n      if (currentPosition[1] - i > -1 && boxBounds.minX === -1) {\n        boxBounds.minX = currentPosition[1] - i;\n      }\n      if (this.battlefieldState.length > currentPosition[0] + i && boxBounds.maxY === -1) {\n        boxBounds.maxY = currentPosition[0] + i;\n      }\n      if (currentPosition[0] - i > -1 && boxBounds.minY === -1) {\n        boxBounds.minY = currentPosition[0] - i;\n      }\n      if (boxBounds.maxX > -1 && boxBounds.maxY > -1 && boxBounds.minX > -1 && boxBounds.minY > -1) {\n        break;\n      }\n    }\n\n    for (let y = boxBounds.minY; y < boxBounds.maxY + 1; y++) {\n      for (let x = boxBounds.minX; x < boxBounds.maxX + 1; x++) {\n        possibleChoices.push([y, x]);\n      }\n    }\n    return possibleChoices;\n  }\n\n}\n","<div id=\"battlefield\">\n    <div>\n        <div *ngFor=\"let row of battlefieldState; let i = index\">\n            <div>\n                <app-cell *ngFor=\"let column of row; let j = index\" [contents]=\"column\" (clicked)=\"cellClicked(i, j)\"></app-cell>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CellState } from '../../interfaces/cell-state';\n\n@Component({\n  selector: 'app-cell',\n  templateUrl: './cell.component.html',\n  styleUrls: ['./cell.component.scss']\n})\nexport class CellComponent implements OnInit {\n\n  @Input() contents: CellState;\n  @Output() clicked = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  cellClicked() {\n    this.clicked.emit();\n  }\n\n}\n","<div\n    class=\"cell\"\n    [matTooltip]=\"contents?.character ? contents.character.name : ''\"\n    [ngStyle]=\"{'background-color': contents?.color || 'white'}\"\n    [ngClass]=\"{'cursor-pointer': contents}\"\n    (click)=\"cellClicked()\"\n    >\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { CellState, Room } from 'src/app/interfaces/cell-state';\nimport { StateService } from 'src/app/services/state.service';\nimport { Socket } from 'ngx-socket-io';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddEnemyModalComponent } from '../add-enemy-modal/add-enemy-modal.component';\nimport { ModifyBattlefieldModalComponent } from '../modify-battlefield-modal/modify-battlefield-modal.component';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit, OnDestroy {\n\n  private destroy$ = new Subject();\n  private characters: CellState[] = [];\n\n  MENU_ITEMS = [\n    {\n      label: 'Add Enemy',\n      action: this.openAddEnemyModal.bind(this),\n      condition: true\n    },\n    {\n      label: 'Roll Initiative',\n      action: this.rollInitiative.bind(this),\n      condition: true\n    },\n    {\n      label: 'New Encounter',\n      action: this.openModifyBattlefieldModal.bind(this),\n      condition: true\n    }\n  ];\n\n  constructor(\n    public stateService: StateService,\n    private socket: Socket,\n    private dialog: MatDialog\n    ) { }\n\n  ngOnInit(): void {\n    this.stateService.characters$.pipe(takeUntil(this.destroy$)).subscribe((characters) => {\n      this.characters = characters;\n    });\n    this.stateService.currentTurnIndex$.pipe(takeUntil(this.destroy$)).subscribe((currentTurn) => {\n      if (!this.stateService.isGM$.getValue() && currentTurn !== -1) {\n        const isMyTurn = this.stateService.characters$.getValue()[currentTurn].id === this.stateService.myId$.getValue();\n        this.stateService.isMyTurn$.next(isMyTurn);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n\n  openModifyBattlefieldModal() {\n    const dialogRef = this.dialog.open(ModifyBattlefieldModalComponent);\n    dialogRef.afterClosed().pipe(takeUntil(this.destroy$)).subscribe((room: Room) => {\n      if (room) {\n        this.stateService.room$.next(room);\n        this.socket.emit('addRoom', room);\n        const battlefield = this.stateService.buildEmptyBattlefield();\n        this.socket.emit('battlefieldChange', battlefield);\n      }\n    });\n  }\n\n  openAddEnemyModal() {\n    const dialogRef = this.dialog.open(AddEnemyModalComponent);\n    dialogRef.afterClosed().pipe(takeUntil(this.destroy$)).subscribe((newChar: CellState) => {\n      if (newChar) {\n        this.characters.push(newChar);\n        this.socket.emit('updateUserList', this.characters);\n      }\n    });\n  }\n\n  rollInitiative() {\n    this.characters.forEach((character) => {\n      const roll = Math.round(Math.random() * 20) + parseInt(character.character.initiativeScore.toString(), 10);\n      character.character.initiativeRoll = roll;\n    });\n    this.characters = this.characters.sort((a, b) => b.character.initiativeRoll - a.character.initiativeRoll);\n    this.socket.emit('updateUserList', this.characters);\n  }\n\n  endTurn() {\n    let currentTurn = this.stateService.currentTurnIndex$.getValue();\n    if (currentTurn + 1 === this.characters.length) {\n      currentTurn = 0;\n    } else {\n      currentTurn += 1;\n    }\n    this.socket.emit('turnChange', currentTurn);\n  }\n\n  beginBattle() {\n    this.socket.emit('turnChange', 0);\n  }\n\n}\n","<footer>\n    <div class=\"row\">\n        <div class=\"col-4\">\n            <h3>{{(stateService.room$ | async)?.name}}</h3>\n        </div>\n        <div class=\"col-8 text-right\">\n            <button *ngIf=\"stateService.isGM$ | async\" mat-raised-button color=\"primary\" [matMenuTriggerFor]=\"menu\">GM Menu</button>\n            <mat-menu #menu=\"matMenu\">\n                <ng-container *ngFor=\"let item of MENU_ITEMS\">\n                    <button mat-menu-item *ngIf=\"item.condition\"  (click)=\"item.action()\">{{item.label}}</button>\n                </ng-container>\n                <button mat-menu-item *ngIf=\"(stateService.currentTurnIndex$ | async) === -1\"  (click)=\"beginBattle()\">Begin Battle</button>\n              </mat-menu>\n            <button *ngIf=\"(stateService.isMyTurn$ | async) || (stateService.isGM$ | async)\" mat-raised-button color=\"primary\" (click)=\"endTurn()\">End Turn</button>\n        </div>\n    </div>\n    \n</footer>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { StateService } from 'src/app/services/state.service';\nimport { Socket } from 'ngx-socket-io';\nimport { CellState, Room } from 'src/app/interfaces/cell-state';\n\nenum LandingStates {\n  LANDED,\n  NEW_GAME,\n  EXISTING_GAME\n}\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.scss']\n})\nexport class LandingComponent implements OnInit {\n\n  LANDING_STATES = LandingStates;\n  state: LandingStates = LandingStates.LANDED;\n  newGameForm = this.fb.group({\n    roomName: ['', Validators.required],\n    playerName: ['', Validators.required],\n    sizeX: [0, Validators.required],\n    sizeY: [0, Validators.required]\n  });\n  existingGameForm = this.fb.group({\n    // roomCode: ['', Validators.required],\n    playerName: ['', Validators.required],\n    color: ['#000000', Validators.required],\n    characterName: ['', Validators.required],\n    movementSpeed: [0, Validators.required],\n    initiativeScore: [0, Validators.required]\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    public stateService: StateService,\n    private socket: Socket\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n  setState(state: LandingStates) {\n    this.state = state;\n  }\n\n  startGame() {\n    const formVal = this.newGameForm.value;\n    const room: Room = {\n      name: formVal.roomName,\n      sizeX: formVal.sizeX,\n      sizeY: formVal.sizeY\n    };\n    this.stateService.room$.next(room);\n    this.socket.emit('addRoom', room);\n    const battlefield = this.stateService.buildEmptyBattlefield();\n    this.socket.emit('battlefieldChange', battlefield);\n    this.stateService.isGM$.next(true);\n    this.stateService.myId$.next(Math.random());\n    this.stateService.myName$.next(formVal.playerName);\n    this.router.navigate(['play']);\n  }\n\n  enterGame() {\n    const formVal = this.existingGameForm.value;\n    const myInfo: CellState = {\n      character: {\n        name: formVal.characterName,\n        player: formVal.playerName,\n        baseMovement: formVal.movementSpeed,\n        initiativeScore: formVal.initiativeScore,\n        currentPosition: [-1, -1],\n      },\n      color: formVal.color,\n      id: Math.random()\n    };\n    this.stateService.myId$.next(myInfo.id);\n    this.stateService.myName$.next(formVal.playerName);\n    this.socket.emit('add', myInfo);\n    this.router.navigate(['play']);\n  }\n\n}\n","<div id=\"landing\">\n    <mat-card>\n        <mat-card-content>\n            <div class=\"text-center\" *ngIf=\"state === LANDING_STATES.LANDED\">\n                <div class=\"margin-bottom\">\n                    <button mat-raised-button color=\"primary\" (click)=\"setState(LANDING_STATES.NEW_GAME)\" [disabled]=\"(stateService.room$ | async) !== null\">Join as GM</button>\n                </div>\n                <div>\n                    <button mat-raised-button color=\"primary\" (click)=\"setState(LANDING_STATES.EXISTING_GAME)\" [disabled]=\"(stateService.room$ | async) === null\">Join as Player</button>\n                </div>\n            </div>\n            <div *ngIf=\"state === LANDING_STATES.NEW_GAME\">\n                    <form [formGroup]=\"newGameForm\" (ngSubmit)=\"startGame()\">\n                        <div  class=\"margin-bottom\">\n                            <mat-form-field>\n                                <mat-label>Room Name</mat-label>\n                                <input matInput required formControlName=\"roomName\">\n                            </mat-form-field>\n                        </div>\n                        <div class=\"margin-bottom\">\n                            <mat-form-field>\n                                <mat-label>GM Name</mat-label>\n                                <input matInput required formControlName=\"playerName\">\n                            </mat-form-field>\n                        </div>\n                        <div class=\"margin-bottom\">\n                            <mat-form-field>\n                                <mat-label>Battlefield Width (cells, 5ft ea)</mat-label>\n                                <input matInput required formControlName=\"sizeX\">\n                            </mat-form-field>\n                        </div>\n                        <div class=\"margin-bottom\">\n                            <mat-form-field>\n                                <mat-label>Battlefield Height (cells, 5ft ea)</mat-label>\n                                <input matInput required formControlName=\"sizeY\">\n                            </mat-form-field>\n                        </div>\n                        <div>\n                            <button mat-raised-button type=\"submit\" color=\"primary\" [disabled]=\"!newGameForm.valid\">Go!</button>\n                        </div>\n                    </form>\n            </div>\n            <div *ngIf=\"state === LANDING_STATES.EXISTING_GAME\">\n                <form [formGroup]=\"existingGameForm\" (ngSubmit)=\"enterGame()\">\n                    <!--<div class=\"margin-bottom\">\n                        <mat-form-field>\n                            <mat-label>Room Code</mat-label>\n                            <input matInput required formControlName=\"roomCode\">\n                        </mat-form-field>\n                    </div>-->\n                    <div class=\"margin-bottom\">\n                        <mat-form-field>\n                            <mat-label>Player Name</mat-label>\n                            <input matInput required formControlName=\"playerName\">\n                        </mat-form-field>\n                    </div>\n                    <div class=\"margin-bottom\">\n                        <mat-form-field>\n                            <mat-label>Player Color</mat-label>\n                            <input matInput type=\"color\" required formControlName=\"color\">\n                        </mat-form-field>\n                    </div>\n                    <div class=\"margin-bottom\">\n                        <mat-form-field>\n                            <mat-label>Character Name</mat-label>\n                            <input matInput required formControlName=\"characterName\">\n                        </mat-form-field>\n                    </div>\n                    <div class=\"margin-bottom\">\n                        <mat-form-field>\n                            <mat-label>Character Base Movement Speed (just the number)</mat-label>\n                            <input matInput required formControlName=\"movementSpeed\">\n                        </mat-form-field>\n                    </div>\n                    <div class=\"margin-bottom\">\n                        <mat-form-field>\n                            <mat-label>Character Initiative (number)</mat-label>\n                            <input matInput required formControlName=\"initiativeScore\">\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <button mat-raised-button type=\"submit\" color=\"primary\" [disabled]=\"!existingGameForm.valid\">Go!</button>\n                    </div>\n                </form>\n            </div>\n        </mat-card-content>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { StateService } from 'src/app/services/state.service';\n\n@Component({\n  selector: 'app-modify-battlefield-modal',\n  templateUrl: './modify-battlefield-modal.component.html',\n  styleUrls: ['./modify-battlefield-modal.component.scss']\n})\nexport class ModifyBattlefieldModalComponent implements OnInit {\n\n  form = this.fb.group({\n    name: ['', Validators.required],\n    sizeX: [0, Validators.required],\n    sizeY: [0, Validators.required]\n  });\n\n  constructor(\n    private dialog: MatDialogRef<ModifyBattlefieldModalComponent>,\n    private stateService: StateService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.form.patchValue(this.stateService.room$.getValue());\n  }\n\n  close() {\n    this.dialog.close(this.form.value);\n  }\n\n}\n","<h1 mat-dialog-title>New Encounter</h1>\n<div mat-dialog-content>\n    <form [formGroup]=\"form\">\n        <div class=\"margin-bottom\">\n            <mat-form-field>\n                <mat-label>Room Name</mat-label>\n                <input matInput required formControlName=\"name\">\n            </mat-form-field>\n        </div>\n        <div class=\"margin-bottom\">\n            <mat-form-field>\n                <mat-label>Battlefield Width (cells, 5ft ea)</mat-label>\n                <input matInput type=\"number\" required formControlName=\"sizeX\">\n            </mat-form-field>\n        </div>\n        <div class=\"margin-bottom\">\n            <mat-form-field>\n                <mat-label>Battlefield Height (cells, 5ft ea)</mat-label>\n                <input matInput type=\"number\" required formControlName=\"sizeY\">\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n<div mat-dialog-actions class=\"text-right\">\n    <button mat-raised-button color=\"primary\" (click)=\"close()\">Add</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-play',\n  templateUrl: './play.component.html',\n  styleUrls: ['./play.component.scss']\n})\nexport class PlayComponent implements OnInit {\n\n  constructor(\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"play\">\n    <app-battlefield></app-battlefield>\n    <app-userlist></app-userlist>\n    <app-footer></app-footer>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CellState } from 'src/app/interfaces/cell-state';\nimport { StateService } from 'src/app/services/state.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n  @Input() character: CellState;\n  @Input() active: boolean;\n  @Output() moveCharacter = new EventEmitter();\n  @Output() deleteCharacter = new EventEmitter();\n\n\n  constructor(public stateService: StateService) { }\n\n  ngOnInit(): void {\n  }\n\n  emitMoveCharacter() {\n    this.moveCharacter.emit();\n  }\n  emitDeleteCharacter() {\n    this.deleteCharacter.emit();\n  }\n\n}\n","<div class=\"user\" [ngClass]=\"{'active' : active}\">\n    <mat-card>\n        <mat-card-content>\n            <div class=\"row\">\n                <div class=\"col-3\">\n                    <div class=\"chip\" [ngStyle]=\"{'background-color': character.color}\"></div>\n                </div>\n                <div class=\"col-6\">\n                    <h3>{{character.character.name}}</h3>\n                    <p>{{character.character.player}}</p>\n                    <p *ngIf=\"character.character.initiativeRoll\">Init: {{character.character.initiativeRoll}}</p>\n                </div>\n                <div class=\"col-3 text-center\">\n                    <mat-icon\n                        class=\"cursor-pointer\"\n                        *ngIf=\"(stateService.isGM$ | async) && (stateService.activeCharacter$ | async) === null\"\n                        (click)=\"emitMoveCharacter()\"\n                        >\n                            open_with\n                    </mat-icon>\n                    <br>\n                    <mat-icon\n                        class=\"cursor-pointer\"\n                        *ngIf=\"(stateService.isGM$ | async) && (stateService.myId$ | async) === character.id\"\n                        (click)=\"emitDeleteCharacter()\"\n                        >\n                            delete\n                    </mat-icon>\n                </div>\n            </div>\n        </mat-card-content>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { CellState } from 'src/app/interfaces/cell-state';\nimport { StateService } from 'src/app/services/state.service';\n\n@Component({\n  selector: 'app-userlist',\n  templateUrl: './userlist.component.html',\n  styleUrls: ['./userlist.component.scss']\n})\nexport class UserlistComponent implements OnInit {\n\n  constructor(\n    public stateService: StateService,\n    private socket: Socket\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n  moveCharacter(character: CellState) {\n    this.stateService.activeCharacter$.next(character);\n  }\n\n  deleteCharacter(character: CellState) {\n    const characters = this.stateService.characters$.getValue();\n    const charIdx = characters.findIndex((item) => item.character.name === character.character.name &&\n      item.character.player === character.character.player);\n    characters.splice(charIdx, 1);\n    this.socket.emit('updateUserList', characters);\n    const battlefield = this.stateService.battlefieldState$.getValue();\n    console.log(battlefield)\n    battlefield.forEach((row: CellState[], rowIndex: number) => {\n      row.forEach((column: CellState, colIndex: number) => {\n        if (column && column.character && column.character.name === character.character.name &&\n            column.character.player === character.character.player\n        ) {\n          battlefield[rowIndex][colIndex] = null;\n        }\n      });\n    });\n    console.log(battlefield);\n    this.socket.emit('battlefieldChange', battlefield);\n  }\n\n}\n","<div id=\"userlist\">\n    <app-user\n        *ngFor=\"let character of stateService.characters$ | async; let i = index\"\n        [character]=\"character\"\n        [active]=\"(stateService.currentTurnIndex$ | async) === i\"\n        (moveCharacter)=\"moveCharacter(character)\"\n        (deleteCharacter)=\"deleteCharacter(character)\"\n        >\n    </app-user>\n</div>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { CellState, Room } from '../interfaces/cell-state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n\n  characters$ = new BehaviorSubject<CellState[]>([]);\n  currentTurnIndex$ = new BehaviorSubject<number>(-1);\n  endTurn$ = new Subject();\n  room$ = new BehaviorSubject<Room>(null);\n  battlefieldState$ = new BehaviorSubject<Array<CellState[]>>([]);\n  isGM$ = new BehaviorSubject<boolean>(false);\n  myId$ = new BehaviorSubject<number>(0);\n  myName$ = new BehaviorSubject<string>('');\n  isMyTurn$ = new BehaviorSubject<boolean>(false);\n  activeCharacter$ = new BehaviorSubject<CellState>(null);\n\n  constructor() {\n  }\n\n  buildEmptyBattlefield() {\n    const room = this.room$.getValue();\n    const battlefield = [];\n    for (let y = 0; y < room.sizeY; y++) {\n      const row = [];\n      for (let x = 0; x < room.sizeX; x++) {\n        row.push(null);\n      }\n      battlefield.push(row);\n    }\n    return battlefield;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}